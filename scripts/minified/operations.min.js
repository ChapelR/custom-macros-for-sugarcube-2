// operations.min.js, for SugarCube 2, by Chapel
;!function(){"use strict";var r=!0,e=!0,t=[0,100];function n(r,e){var t,i=[],n=0;if("string"==typeof r)i=r.split("d");else if("number"==typeof r&&e)i=[r,e];else{if(!(Array.isArray(r)&&2<=r.length))throw new TypeError("dice(): could not process arguments...");r.length=2,i=r}for(t=0;t<i[0];t++){n+=Math.floor(State.random()*i[1])+1}return n}function i(r,e){if("string"==typeof r){var t=[(i=r.trim().replace(/\s/g,"").match(/(\d*d\d*)(.*)/))[1],Number(i[2])];return n(t[0])+t[1]}return n(r,e);var i}setup.dice={roll:i},r&&(window.dice=window.dice||i),Number.prototype.dice||Object.defineProperty(Number.prototype,"dice",{configurable:!0,writable:!0,value:function(r){if(0===this)return 0;if(this<0)throw new TypeError("Number.prototype.dice: cannot roll a negative number of dice!");if(null==r||"number"!=typeof r||r<=0||arguments.length<1)throw new TypeError("Number.prototype.dice: error in argument");if(!Number.isInteger(this)||!Number.isInteger(r))throw new TypeError("Number.prototype.dice: cannot roll partial dice!");return i(this,r)}}),Number.prototype.fairmath||Object.defineProperty(Number.prototype,"fairmath",{configurable:!0,writable:!0,value:function(r){var e=t;if(this<e[0]||this>e[1])throw new TypeError("Number.prototype.fairmath called on a number that is out of the defined range (the number was "+this+").");if(null==r||"number"!=typeof r||100<r||r<-100||arguments.length<1)throw new TypeError("Number.prototype.fairmath given incorrect argument or an argument that is out of the valid 0-100 range.");if(0===r)return Math.clamp(Math.trunc(this),e[0],e[1]);if(r<0)return r*=-1,Math.clamp(Math.trunc(this-(this-e[0])*(r/e[1])),e[0],e[1]);if(0<r)return Math.clamp(Math.trunc(this+(e[1]-this)*(r/e[1])),e[0],e[1]);throw new Error("Number.prototype.fairmath encountered an unspecified error.")}}),Math.fairmath||Object.defineProperty(Math,"fairmath",{configurable:!0,writable:!0,value:function(r,e){return r.fairmath(e)}}),e&&(Math.fm||Object.defineProperty(Math,"fm",{configurable:!0,writable:!0,value:function(r,e){return r.fairmath(e)}}),Number.prototype.fm||Object.defineProperty(Number.prototype,"fm",{configurable:!0,writable:!0,value:function(r){return this.fairmath(r)}}),Number.prototype.d||Object.defineProperty(Number.prototype,"d",{configurable:!0,writable:!0,value:function(r){return this.dice(r)}}))}();
// end operations.min.js