// meters.min.js, for SugarCube 2, by Chapel
;!function(){"use strict";var t=!0,o=!1,l=!1,h={full:"#2ECC40",empty:"#FF4136",back:"#DDDDDD",height:"12px",width:"180px",animate:400,easing:"swing",text:"#111111",label:"",align:"center"},g=["center","left","right"],u=["swing","linear"];function c(t,e){return t&&"string"==typeof t&&(t=t.toLowerCase().trim())||e||""}function m(t,e){if(!(this instanceof m))return new m(t,e);var s=clone(h);this.settings=Object.assign(s,t),this.settings.align=c(this.settings.align),this.settings.easing=c(this.settings.easing),g.includes(this.settings.align)||(this.settings.align="center"),u.includes(this.settings.easing)||(this.settings.easing="swing"),e=Number(e),Number.isNaN(e)&&(e=1),e=Math.clamp(e,0,1),this.value=e;var i=$(document.createElement("div")).addClass("chapel-meter").attr({"data-val":e,"data-label":this.settings.label}).css({position:"relative","background-color":this.settings.back,height:this.settings.height,width:this.settings.width,overflow:"hidden"}),n=$(document.createElement("div")).addClass("meter-label").css({position:"absolute",top:0,right:0,"font-size":this.settings.height,"font-weight":"bold","line-height":"100%",width:"100%",height:"100%","vertical-align":"middle","text-align":this.settings.align,color:this.settings.text,"z-index":1,position:"relative",bottom:"100%"}).wiki(this.settings.label).appendTo(i),r=$(document.createElement("div")).addClass("meter-top").css({"background-color":this.settings.full,opacity:this.value,width:"100%",height:"100%","z-index":0}),a=$(document.createElement("div")).addClass("meter-bottom").css({position:"absolute",top:0,left:0,"background-color":this.settings.empty,opacity:1,width:100*this.value+"%",height:"100%","z-index":0}).append(r).appendTo(i);this.$element=i,this.$bars={top:r,bottom:a},(this.$label=n).css("font-size",parseInt(i.css("height"),10)<parseInt($(".passage").css("font-size"),10)?i.css("height"):$(".passage").css("font-size")),n.css("line-height",i.css("height"))}Object.assign(m,{_list:new Map,is:function(t){return t instanceof m},has:function(t){return m._list.has(t)&&m.is(m._list.get(t))},get:function(t){return m.has(t)?m._list.get(t):null},del:function(t){m.has(t)&&m._list.delete(t)},add:function(t,e,s){if(!m.has(t)||o){var i=new m(e,s);return m._list.set(t,i),i}console.error('Meter "'+t+'" already exists.')},_emit:function(t,e){m.is(t)&&t.$element.trigger({type:":"+e,meter:t})}}),Object.assign(m.prototype,{constructor:m,_label:function(t){var e=this;function s(){e.$label.empty().wiki(e.settings.label),e.$label.css("font-size",parseInt(e.$element.css("height"),10)<parseInt(e.$element.parent().css("font-size"),10)?e.$element.css("height"):e.$element.parent().css("font-size")),e.$label.css("line-height",e.$element.css("height"))}return t?setTimeout(s,Engine.minDomActionDelay):s(),this},_width:function(){var t=this;return this.$bars.bottom.animate({width:100*this.value+"%"},this.settings.animate,this.settings.easing,function(){m._emit(t,"meter-animation-complete")}),this},_color:function(){return this.$bars.top.animate({opacity:this.value},this.settings.animate,this.settings.easing),this},animate:function(){return m._emit(this,"meter-animation-start"),this._color()._width()._label()},val:function(t){return void 0!==t&&(t=Number(t),Number.isNaN(t)&&(t=1),t=Math.clamp(t,0,1),this.value=t,this.animate()),this.value},options:function(t){return t&&"object"==typeof t&&Object.assign(this.settings,t),this.settings},unwrap:function(){return this.$element[0]},place:function(t,e){var s=$(document.createElement("span"));return t instanceof jQuery||(t=$(t)),t[0]||console.warn("meter#place() -> no valid target"),e&&"object"==typeof e&&(e.classes&&(Array.isArray(e.classes)||"string"==typeof e.classes)&&s.addClass(e.classes),e.attr&&"object"==typeof e.attr&&s.attr(e.attr)),t.append(s.append(this.$element)),this._label(!0),this},on:function(t,e){return"function"!=typeof e||t&&"string"==typeof t&&t.trim()&&(t=t.split(" ").map(function(t){return(t=t.split(".")[0])+".userland"}).join(" "),this.$element.on(t,e)),this},one:function(t,e){return"function"!=typeof e||t&&"string"==typeof t&&t.trim()&&(t=t.split(" ").map(function(t){return(t=t.split(".")[0])+".userland"}).join(" "),this.$element.one(t,e)),this},off:function(t){return t=t&&"string"==typeof t&&t.trim()?t.split(" ").map(function(t){return(t=t.split(".")[0])+".userland"}).join(" "):".userland",this.$element.off(t),this},click:function(t,e){return this.$element.ariaClick(t,e),this},clone:function(){return new m(this.settings,this.value)},toJSON:function(){return JSON.reviveWrapper("new setup.Meter("+JSON.stringify(this.settings)+", "+this.value+")")}}),setup.Meter=m,t&&(window.Meter=window.Meter||m),Macro.add("newmeter",{tags:["colors","sizing","animation","label"],handler:function(){if(0<State.length&&!l)return this.error("The `<<newmeter>>` macro must be called in your `StoryInit` special passage. Seriously. No excuses. --Love, Chapel");if(this.args.length<1)return this.error("The `<<newmeter>>` macro requires at least one argument: a meter name.");var t=this.args[0],e=null,s=null,i=null,n=null;if("string"!=typeof t)return this.error("Invalid meter name.");if(t=t.trim(),m.has(t)&&!o)return this.error('Cannot clobber the existing meter "'+t+'".');this.payload.length&&(e=this.payload.find(function(t){return"colors"===t.name}),s=this.payload.find(function(t){return"sizing"===t.name}),i=this.payload.find(function(t){return"animation"===t.name}),n=this.payload.find(function(t){return"label"===t.name}));var r={};if(e){if(!e.args.length)return this.error("No arguments passed to the `<<colors>>` tag.");switch(e.args.length){case 1:r.empty=e.args[0],r.full="transparent";break;case 2:r.full=e.args[0],r.empty=e.args[1];break;default:r.full=e.args[0],r.empty=e.args[1],r.back=e.args[2]}}if(s){if(!s.args.length)return this.error("No arguments passed to the `<<sizing>>` tag.");r.width=s.args[0],s.args[1]&&(r.height=s.args[1])}if(i){if(!i.args.length)return this.error("No arguments passed to the `<<animation>>` tag.");if("boolean"!=typeof i.args[0]||i.args[0]){if("string"!=typeof i.args[0])return this.error("The argument to the `<<animation>>` tag should be `true`, `false`, or a valid CSS time value.");r.animate=Util.fromCssTime(i.args[0])}else r.animate=0;i.args[1]&&["swing","linear"].includes(i.args[1])&&(r.easing=i.args[1])}if(n){var a=n.args[0];if(!a||"string"!=typeof a)return this.error("The labelText argument for the `<<label>>` tag is required.");r.label=a.trim(),n.args[1]&&"string"==typeof n.args[1]&&(r.text=n.args[1]),n.args[2]&&"string"==typeof n.args[2]&&(r.align=n.args[2])}m.add(t,r,this.args[1])}}),Macro.add("showmeter",{handler:function(){if(this.args.length<1)return this.error("This macro requires at least one argument: the meter's name.");var t=this.args[0];if("string"!=typeof t)return this.error("Invalid meter name.");t=t.trim();var e=m.get(t);if(!e||!m.is(e))return this.error('The meter "'+t+'" does not exist.');"number"==typeof this.args[1]&&e.val(this.args[1]),e.place(this.output,{classes:"macro-"+this.name,attr:{id:"meter-"+Util.slugify(t)}})}}),Macro.add("updatemeter",{handler:function(){if(this.args.length<2)return this.error("This macro requires two arguments: the meter's name and a value.");var t=this.args[0];if("string"!=typeof t)return this.error("Invalid meter name.");t=t.trim();var e=m.get(t);if(!e||!m.is(e))return this.error('The meter "'+t+'" does not exist.');e.val(this.args[1])}})}();
// end meters.min.js